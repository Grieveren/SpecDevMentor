{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Listen to source code files in the repository. When changes are detected, analyze the modified code for potential improvements, including code smells, design patterns, and best practices. Generate suggestions for improving code quality while maintaining the existing functionality. Focus on readability, maintainability, and performance optimizations. Implement the proposed changes.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "client/src/**/*.{ts",
      "tsx",
      "js",
      "jsx}",
      "server/src/**/*.{ts",
      "js}",
      "shared/**/*.{ts",
      "js}",
      "*.{ts",
      "tsx",
      "js",
      "jsx}"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "A source code file has been modified. Please analyze the changed code for potential improvements including:\n\n1. **Code Smells Detection**: Identify long methods, duplicate code, large classes, inappropriate intimacy, and other code smells\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for TypeScript best practices, React patterns, Node.js conventions, and project-specific standards\n4. **Performance Optimizations**: Look for opportunities to improve performance, memory usage, and bundle size\n5. **Readability & Maintainability**: Suggest improvements for code clarity, naming conventions, and documentation\n6. **Security Considerations**: Identify potential security vulnerabilities or areas for improvement\n\nFor each suggestion:\n- Explain the current issue and why it should be improved\n- Provide the specific code changes needed\n- Explain the benefits of the proposed change\n- Ensure the changes maintain existing functionality\n\nFocus on actionable improvements that align with the project's architecture standards, TypeScript patterns, React best practices, and the specific patterns used in this CodeMentor AI platform.\n\nAfter analysis, implement the most critical improvements while preserving all existing functionality."
  }
}